{"version":3,"sources":["pages/home.js","components/movieCard/index.js","components/movieCard/movieCard.js","pages/movies.js","components/TvShowCard/index.js","components/TvShowCard/tvShowCard.js","pages/TvShows.js","components/SinglePage/index.js","components/SinglePage/singlePage.js","components/SinglePage/actor/index.js","components/SinglePage/actor/actor.js","components/similarFilms/index.js","components/similarFilms/similarFilms.js","pages/singleMovie.js","pages/singleShow.js","pages/Popular.js","pages/upComing.js","pages/Actors-film.js","pages/SearchPage.js","assets/images/icons/slack.svg","containers/Header/index.js","containers/Header/header.js","App.js","index.js"],"names":["Home","className","MovieCard","id","title","imgLink","rating","releaseDate","to","src","alt","Movies","useState","isFetched","data","error","movieData","setMovieList","useEffect","axios","get","params","api_key","then","response","results","catch","console","log","map","movie","index","poster_path","release_date","vote_average","TvShowCard","TvShows","erro","tvShowInfo","settvShowInfo","original_name","date","episode_run_time","SinglePage","filmPath","overview","ActorCard","imagePath","name","SimilarFilms","SingleMovie","match","MovieInfo","setMovieInfo","Actor","setActor","SimilarInfo","setSimilarInfo","backdrop_path","original_title","cast","profile_path","SingleShow","singleShowInfo","setSingleShow","Popular","UpComing","ActorFilms","SearchPage","useHistory","MovieList","searchQuery","length","Header","history","searchValue","setsearchValue","push","Logo","type","onChange","e","target","value","App","exact","path","component","SerachPage","tvShows","singleMovie","singleShow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cc73162.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport axios from 'axios'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Hush kebsiz okam</h1>\r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport default Home","import MovieCard from \"./movieCard\"\r\n\r\n\r\nexport default MovieCard","import { Link } from 'react-router-dom'\r\n\r\nimport './movieCard.scss'\r\n\r\nconst MovieCard = ({ id, title, imgLink, rating, releaseDate }) => {\r\n    return (\r\n        <Link to={`/movie/${id}`} className=\"movie-card\">\r\n            <span className=\"card-rating\">{rating}</span>\r\n            <div className=\"img-holder\">\r\n                <img src={`https://image.tmdb.org/t/p/w500/${imgLink}`} alt=\"Logo\" className=\"card-img\" />\r\n            </div>\r\n            <div className=\"card-info\">\r\n                <h2 className=\"card-title\">{title}</h2>\r\n                <h5 className=\"release-date\">{releaseDate}</h5>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\nexport default MovieCard;","import { useState, useEffect } from \"react\"\r\nimport axios from 'axios'\r\nimport {\r\n    Link\r\n} from 'react-router-dom'\r\n\r\n\r\nimport MovieCard from \"../components/movieCard\"\r\n\r\nconst Movies = () => {\r\n\r\n    const [ movieData, setMovieList] = useState({\r\n        isFetched: false,\r\n        data: {},\r\n        error: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/movie/now_playing`, {\r\n            params: {\r\n                api_key: \"017ad4bace8b4554e9bc42c73c4a392b\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: response.data.results,\r\n                error: false,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: [],\r\n                error: error,\r\n            })\r\n        }) \r\n    }, [ ])\r\n    console.log(movieData)\r\n    return (\r\n        <div className=\"container\">\r\n            {   \r\n                movieData.isFetched ?  (\r\n                    <div className=\"movies-wrapper\">\r\n                        {\r\n                            movieData.data.map((movie, index) => (\r\n                                    <MovieCard\r\n                                        id={movie.id}\r\n                                        imgLink={movie.poster_path}\r\n                                        title={movie.title}\r\n                                        releaseDate={movie.release_date}\r\n                                        rating={movie.vote_average}\r\n                                        key={index}\r\n                                    />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                ) :  (\r\n                    <h1>Loading..</h1>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Movies","import TvShowCard from './tvShowCard'\r\n\r\n\r\nexport default TvShowCard","import { Link } from 'react-router-dom'\r\n\r\nimport './style.scss'\r\n\r\nconst TvShowCard = ({ id, title, imgLink, rating, releaseDate }) => {\r\n    return (\r\n        <Link to={`/TvShows/${id}`} className=\"movie-card\">\r\n            <span className=\"card-rating\">{rating}</span>\r\n            <div className=\"img-holder\">\r\n                <img src={`https://image.tmdb.org/t/p/w500/${imgLink}`} alt=\"Logo\" className=\"card-img\" />\r\n            </div>\r\n            <div className=\"card-info\">\r\n                <h2 className=\"card-title\">{title}</h2>\r\n                <h5 className=\"release-date\">{releaseDate}</h5>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\nexport default TvShowCard;","import { useState, useEffect } from \"react\"\r\nimport axios from 'axios'\r\nimport TvShowCard from '../components/TvShowCard'\r\n\r\nconst TvShows = () => {\r\n    const [ tvShowInfo, settvShowInfo] = useState({\r\n        isFetched: false,\r\n        data: {},\r\n        erro: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/tv/popular`, {\r\n            params: {\r\n                api_key: \"017ad4bace8b4554e9bc42c73c4a392b\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            settvShowInfo({\r\n                isFetched: true,\r\n                data: response.data.results,\r\n                error: false,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            settvShowInfo({\r\n                isFetched: true,\r\n                data: [],\r\n                error: error,\r\n            })\r\n        }) \r\n    }, [ ])\r\n    console.log(tvShowInfo.data);\r\n    return (\r\n        <div className=\"container\">\r\n            {   \r\n                tvShowInfo.isFetched ?  (\r\n                    <div className=\"movies-wrapper\">\r\n                        {\r\n                            tvShowInfo.data.map((movie, index) => (\r\n                                    <TvShowCard \r\n                                        id={movie.id}\r\n                                        imgLink={movie.poster_path}\r\n                                        title={movie.original_name}\r\n                                        date={movie.episode_run_time}\r\n                                        rating={movie.vote_average}\r\n                                        key={index}\r\n                                    />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                ) :  (\r\n                    <h1>Loading..</h1>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport default TvShows","import SinglePage from './singlePage'\r\n\r\nexport default SinglePage","import \"./singlePage.scss\"\r\n\r\nconst SinglePage = ({filmPath, title, date, overview}) => {\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"left\">\r\n                <img src={`https://image.tmdb.org/t/p/w500/${filmPath}`}/>\r\n            </div>\r\n            <div className=\"right\">\r\n                <h1>{title}</h1>\r\n                <span className=\"date\">{date}</span>\r\n                <p className=\"overview\">\r\n                    {overview}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SinglePage","import ActorCard from \"./actor\"\r\n\r\nexport default ActorCard","import './actor.scss'\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nconst actorCard = ({imagePath, name, id}) => {\r\n    return(\r\n        <Link to={`/ActorFilms/${id}`} className=\"actor-wrapper\">\r\n            <img src={`https://image.tmdb.org/t/p/w500/${imagePath}`} alt=\"\"/>\r\n            <p>{name}</p>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default actorCard","import SimilarFilms from './similarFilms'\r\n\r\nexport default SimilarFilms;","import './similar.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst similarFilms = ({name, imgLink, id}) =>{\r\n    return (\r\n        <Link to={`/movie/${id}`} className=\"similar_movie\">\r\n            <img src={`https://image.tmdb.org/t/p/w500/${imgLink}`}/>\r\n            <h3>{name}</h3>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default similarFilms","import { useState, useEffect } from \"react\"\r\nimport axios from 'axios'\r\nimport SingleMoviePage from '../components/SinglePage'\r\nimport ActorCards from '../components/SinglePage/actor'\r\nimport SimilarFilms from '../components/similarFilms'\r\n\r\nconst SingleMovie = ({ match }) => {\r\n\r\n    const [MovieInfo, setMovieInfo] = useState({\r\n        isFetched: false,\r\n        data: [],\r\n        error: null\r\n    })\r\n\r\n    const [Actor, setActor] = useState({\r\n        isFetched: false,\r\n        data: [],\r\n        error: null\r\n    })\r\n\r\n    const [SimilarInfo, setSimilarInfo] = useState({\r\n        isFetched: false,\r\n        data: [],\r\n        error: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}`, {\r\n            params: {\r\n                api_key: \"017ad4bace8b4554e9bc42c73c4a392b\"\r\n            }\r\n        })\r\n\r\n            .then(function (response) {\r\n                setMovieInfo({\r\n                    isFetched: true,\r\n                    data: response.data,\r\n                    error: false,\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                setMovieInfo({\r\n                    isFetched: true,\r\n                    data: [],\r\n                    error: error,\r\n                })\r\n            })\r\n        axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}/credits`, {\r\n            params: {\r\n                api_key: \"017ad4bace8b4554e9bc42c73c4a392b\"\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response.data)\r\n                setActor({\r\n                    isFetched: true,\r\n                    data: response.data,\r\n                    error: false,\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                setActor({\r\n                    isFetched: true,\r\n                    data: [],\r\n                    error: error,\r\n                })\r\n            })\r\n        axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}/similar`, {\r\n            params: {\r\n                api_key: \"017ad4bace8b4554e9bc42c73c4a392b\"\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                setSimilarInfo({\r\n                    isFetched: true,\r\n                    data: response.data,\r\n                    error: false,\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                setSimilarInfo({\r\n                    isFetched: true,\r\n                    data: [],\r\n                    error: error,\r\n                })\r\n            })\r\n    }, [match.params.id])\r\n\r\n    console.log(match.params.id)\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                MovieInfo.isFetched ? (\r\n                    <>\r\n                        <SingleMoviePage\r\n                            filmPath={MovieInfo.data.backdrop_path}\r\n                            title={MovieInfo.data.original_title}\r\n                            date={MovieInfo.data.release_date}\r\n                            overview={MovieInfo.data.overview}\r\n                        >\r\n                        </SingleMoviePage>\r\n                    </>\r\n                ) : (\r\n                    <h2>loading...</h2>\r\n                )\r\n            }\r\n            {\r\n                SimilarInfo.isFetched ? (\r\n                    <>\r\n                        <h1 className=\"title\">Films</h1>\r\n                        <div className=\"wrap-similar_films\">\r\n                            {\r\n                                SimilarInfo.data.results.map((movie) => (\r\n                                    <SimilarFilms\r\n                                        name={movie.title}\r\n                                        imgLink={movie.poster_path}\r\n                                        id={movie.id}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <h1>Loading..</h1>\r\n                )\r\n            }\r\n            {\r\n                Actor.isFetched ? (\r\n                    <>\r\n                        <h2>Actors</h2>\r\n                        <div className=\"actors_line\">\r\n                            {\r\n                                Actor.data.cast.map((movie) => (\r\n                                    <ActorCards\r\n                                        name={movie.original_name}\r\n                                        imagePath={movie.profile_path}\r\n                                        id={movie.id}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <h3>loading...</h3>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SingleMovie","import { useState, useEffect } from \"react\"\r\nimport axios from 'axios'\r\nimport SingleShowPage from '../components/SinglePage'\r\n\r\n\r\nconst SingleShow = ({ match }) => {\r\n    const [ singleShowInfo, setSingleShow] = useState({\r\n        isFetched: false,\r\n        data: {},\r\n        error: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/tv/${match.params.id}`, {\r\n            params: {\r\n                api_key: \"017ad4bace8b4554e9bc42c73c4a392b\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            setSingleShow({\r\n                isFetched: true,\r\n                data: response.data,\r\n                error: false,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            setSingleShow({\r\n                isFetched: true,\r\n                data: [],\r\n                error: error,\r\n            })\r\n        }) \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n           {\r\n                singleShowInfo.isFetched ? (\r\n                    <>\r\n                        <SingleShowPage\r\n                            filmPath={singleShowInfo.data.backdrop_path}\r\n                            title={singleShowInfo.data.original_name}\r\n                            date={singleShowInfo.data.release_date}\r\n                            overview={singleShowInfo.data.overview}\r\n                        >\r\n                        </SingleShowPage>\r\n                    </>\r\n                ) : (\r\n                    <h2>loading...</h2>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport default SingleShow;","import { useState, useEffect } from \"react\"\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nimport MovieCard from \"../components/movieCard\"\r\n\r\nconst Popular = () => {\r\n\r\n    const [ movieData, setMovieList] = useState({\r\n        isFetched: false,\r\n        data: {},\r\n        erro: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/movie/popular`, {\r\n            params: {\r\n                api_key: \"017ad4bace8b4554e9bc42c73c4a392b\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: response.data.results,\r\n                error: false,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: [],\r\n                error: error,\r\n            })\r\n        }) \r\n    }, [ ])\r\n    return (\r\n        <div className=\"container\">\r\n            {   \r\n                movieData.isFetched ?  (\r\n                    <div className=\"movies-wrapper\">\r\n                        {\r\n                            movieData.data.map((movie, index) => (\r\n                                    <MovieCard\r\n                                        id={movie.id}\r\n                                        imgLink={movie.poster_path}\r\n                                        title={movie.title}\r\n                                        releaseDate={movie.release_date}\r\n                                        rating={movie.vote_average}\r\n                                        key={index}\r\n                                    />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                ) :  (\r\n                    <h1>Loading..</h1>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Popular","import { useState, useEffect } from \"react\"\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nimport MovieCard from \"../components/movieCard\"\r\n\r\nconst UpComing = () => {\r\n\r\n    const [ movieData, setMovieList] = useState({\r\n        isFetched: false,\r\n        data: {},\r\n        erro: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/movie/upcoming`, {\r\n            params: {\r\n                api_key: \"017ad4bace8b4554e9bc42c73c4a392b\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: response.data.results,\r\n                error: false,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            setMovieList({\r\n                isFetched: true,\r\n                data: [],\r\n                error: error,\r\n            })\r\n        }) \r\n    }, [ ])\r\n    return (\r\n        <div className=\"container\">\r\n            {   \r\n                movieData.isFetched ?  (\r\n                    <div className=\"movies-wrapper\">\r\n                        {\r\n                            movieData.data.map((movie, index) => (\r\n                                    <MovieCard\r\n                                        id={movie.id}\r\n                                        imgLink={movie.poster_path}\r\n                                        title={movie.title}\r\n                                        releaseDate={movie.release_date}\r\n                                        rating={movie.vote_average}\r\n                                        key={index}\r\n                                    />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                ) :  (\r\n                    <h1>Loading..</h1>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UpComing","import { useState, useEffect } from \"react\"\r\nimport axios from 'axios'\r\nimport MovieCard from '../components/movieCard'\r\n\r\n\r\nconst ActorFilms = ({ match }) => {\r\n    console.log(match);\r\n    const [ singleShowInfo, setSingleShow] = useState({\r\n        isFetched: false,\r\n        data: {},\r\n        error: null\r\n    })\r\n    console.log(match.params)\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/person/${match.params.id}/movie_credits`, {\r\n            params: {\r\n                api_key: \"017ad4bace8b4554e9bc42c73c4a392b\"\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            setSingleShow({\r\n                isFetched: true,\r\n                data: response.data,\r\n                error: false,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            setSingleShow({\r\n                isFetched: true,\r\n                data: [],\r\n                error: error,\r\n            })\r\n        }) \r\n    }, [])\r\n    console.log(singleShowInfo.data.cast);\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"wrap-similar_films\">\r\n            {   \r\n                singleShowInfo.isFetched ?  (\r\n                    <div className=\"movies-wrapper\">\r\n                        {\r\n                            singleShowInfo.data.cast.map((movie, index) => (\r\n                                    <MovieCard\r\n                                        id={movie.id}\r\n                                        imgLink={movie.poster_path}\r\n                                        title={movie.title}\r\n                                        releaseDate={movie.release_date}\r\n                                        rating={movie.vote_average}\r\n                                        key={index}\r\n                                    />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                ) :  (\r\n                    <h1>Loading..</h1>\r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActorFilms","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport MovieCard from '../components/movieCard'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst SearchPage = ({ match }) => {\r\n    let history = useHistory()\r\n\r\n    const [MovieList, setMovieList] = useState({\r\n        isFetched: false,\r\n        data: {},\r\n        error: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/search/movie?query=${match.params.searchQuery}`, {\r\n            params: {\r\n                api_key: \"017ad4bace8b4554e9bc42c73c4a392b\"\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                setMovieList({\r\n                    isFetched: true,\r\n                    data: response.data.results,\r\n                    error: false,\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                setMovieList({\r\n                    isFetched: true,\r\n                    data: [],\r\n                    error: error,\r\n                })\r\n            })\r\n    }, [match.params.searchQuery])\r\n\r\n    return (\r\n        <section className=\"container\">\r\n            {\r\n                MovieList.isFetched ? (\r\n                    <div className=\"movies-wrapper\">\r\n                        {\r\n                            MovieList.data.length > 0 ? (\r\n                                MovieList.data.map((movie, index) => (\r\n                                    <MovieCard\r\n                                        id={movie.id}\r\n                                        imgLink={movie.poster_path}\r\n                                        title={movie.title}\r\n                                        releaseDate={movie.release_date}\r\n                                        rating={movie.vote_average}\r\n                                        key={index}\r\n                                    />\r\n                                ))\r\n                            ) : (\r\n                                <h1>Bunaqa kino chiqmadiyu okam</h1>\r\n                            )\r\n                        }\r\n                    </div>\r\n                ) : (\r\n                    <h1>Loading..</h1>\r\n                )\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SearchPage","export default __webpack_public_path__ + \"static/media/slack.3e75fceb.svg\";","import Header from './header'\r\n\r\nexport default Header;","import './main.scss'\r\nimport Logo from '../../assets/images/icons/slack.svg'\r\nimport { useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    let history = useHistory()\r\n\r\n    const [ searchValue, setsearchValue] = useState('')\r\n\r\n    \r\n    useEffect(() => {\r\n        if(searchValue.length !== 0){\r\n            history.push(`/search/${searchValue}`)\r\n        } else(\r\n            history.push(\"/\")\r\n        )\r\n    }, [searchValue])\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"header-logo\" >\r\n                    <img src={Logo} alt=\"Logo\" />\r\n                </Link>\r\n                <div className=\"header-links\">\r\n                    <Link className=\"header-link\" to=\"/movies\" >Movies</Link>\r\n                    <Link className=\"header-link\" to=\"/tvShows\" >TvShows</Link>\r\n                    <Link className=\"header-link\" to=\"/popular\">Popular</Link>\r\n                    <Link className=\"header-link\" to=\"/upcoming\">Upcoming</Link>\r\n                </div>\r\n\r\n                <form className=\"header-form\">\r\n                    <input type=\"search\" className=\"header-input\" onChange={(e) => setsearchValue(e.target.value)} value={searchValue} />\r\n                    <button className=\"header-search-btn\" type=\"submit\" >Search</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header","import {\n  BrowserRouter as Router,\n  Switch, \n  Route\n} from \"react-router-dom\"\n\nimport {\n  Home,\n  Movies,\n  tvShows,\n  singleMovie,\n  singleShow,\n  Popular,\n  UpComing,\n  ActorFilms,\n  SerachPage\n} from './pages'\n\nimport Header from './containers/Header'\n\nimport  './assets/styles/main.scss'\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Header/>\n        \n        <Switch>\n          <Route exact path=\"/search/:searchQuery\" component={SerachPage} />\n          <Route exact path=\"/popular\" component={Popular} />\n          <Route exact path=\"/\"  component={Home} />\n          <Route exact path=\"/upcoming\" component={UpComing} />\n          <Route exact path=\"/movies\"  component={Movies} />\n          <Route exact path=\"/tvShows\"  component={tvShows} />\n          <Route exact path=\"/movie/:id\"  component={singleMovie} />\n          <Route exact path=\"/TvShows/:id\"  component={singleShow} />\n          <Route exact path=\"/ActorFilms/:id\"  component={ActorFilms} />\n        </Switch> \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App/>\n  </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}